- var first = "\n"
|digraph G {
|   node [fontname = "Geneva"]
|   edge [fontname = "Geneva"]
|   splines=polyline#{first}
if initial
  |   #{initial} [shape="circle", style="filled", fillcolor=black, label="", xlabel="#{initial}", fixedsize="true", width=0.25]#{first}
each f in final
  |   #{f} [shape="doublecircle", style="filled", fillcolor=black, label="",xlabel="#{f}", fixedsize="true", width=0.25]#{first}
each state in states
  |   #{state.name} [shape="none", label=<
  table(style="rounded")
    tr
      td(border="0") #{state.name}
    if state.activities.entry.length || state.activities.do.length || state.activities.exit.length
      hr
      tr
        td(border="0")
      hr
      each a in state.activities.entry
        tr
          td(border="0", align="left") entry/#{a}
      each a in state.activities.entered
        tr
          td(border="0", align="left") entry/#{a}
      each a in state.activities.do
        tr
          td(border="0", align="left") do/#{a}
      each a in state.activities.exit
        tr
          td(border="0", align="left") exit/#{a}
  |>]#{first}
each state in choices
  |   #{state} [shape="diamond", label="", width=0.25, height=0.25]#{first}
each event in events
  |   #{event.from} -> #{event.to} [label=" #{event.label} "]#{first}
|}
